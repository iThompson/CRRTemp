// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "SensorRead.h"

SensorRead::SensorRead() {
//	Requires(Robot::sensors);
}

// Called just before this Command runs the first time
void SensorRead::Initialize() {
	
}

// Called repeatedly when this Command is scheduled to run
void SensorRead::Execute() {
	/*Robot::sensors->Update();
	sensor_vals* buffer = Robot::sensors->GetState();
	char x[9];
	x[8] = 0;
	sprintf(x, "%d%d%d%d%d%d%d%u\n",
			buffer->checksum,
			buffer->tote1,
			buffer->tote2,
			buffer->tote3,
			buffer->tote4,
			buffer->tote5,
			buffer->bin,
			buffer->padding);
	SmartDashboard::PutBoolean("tote1", buffer->tote1);
	SmartDashboard::PutBoolean("tote2", buffer->tote2);
	SmartDashboard::PutBoolean("tote3", buffer->tote3);
	SmartDashboard::PutBoolean("tote4", buffer->tote4);
	SmartDashboard::PutBoolean("tote5", buffer->tote5);
	SmartDashboard::PutBoolean("bin", buffer->bin);
*/

}

// Make this return true when this Command no longer needs to run execute()
bool SensorRead::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void SensorRead::End() {
	
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void SensorRead::Interrupted() {

}
